{"version":3,"file":"static/js/433.eb6dd537.chunk.js","mappings":"uNAGiBA,EAAAA,EAAAA,KAEjB,SAASC,EAAT,GAAqC,IAAfC,EAAc,EAAdA,WACdC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,+BACE,SAAC,IAAD,CACEC,WAAS,EACTC,OACE,gBAAKC,MAAO,CAAEC,SAAU,WAAYC,MAAO,QAA3C,UACE,gBACEC,IAAI,UACJC,IAAK,wBAA0BT,EAAWU,YAC1CL,MAAO,CAAEE,MAAO,OAAQI,YAAa,OAAQC,UAAW,aAiB9DC,QAAS,EACP,iBACER,MAAO,CACLS,QAAS,OACTC,eAAgB,eAChBC,WAAY,SACZT,MAAO,QALX,WAQE,0BAEE,cAAGF,MAAO,CAAEY,SAAU,GAAIC,WAAY,QAAtC,4BAEF,SAAC,KAAD,CAAQC,KAAK,UAAsBC,QA3CzB,WAClBnB,EAAS,WAAD,OAAYD,EAAWqB,IAChC,EAyCS,yBAA2B,aArCjC,SA4CGrB,EAAWsB,SAInB,CAEc,SAASC,EAAT,GAAsC,IAAfC,EAAc,EAAdA,WACpC,OACE,+BACE,SAAC,IAAD,CAAKC,OAAQ,CAAC,EAAG,GAAIC,QAAQ,SAASrB,MAAO,CAACE,MAAM,QAApD,SAEGiB,EAAWG,KAAI,SAACC,GAAD,OACd,SAAC,IAAD,CAAmBvB,MAAO,CAACE,MAAM,QAAjC,UACE,SAACR,EAAD,CAAYC,WAAY4B,KADhBA,EAAKP,GADD,OAQvB,C,gIC1Cc,SAASQ,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAON,EAAP,KAAmBO,EAAnB,KACA,GAAoCD,EAAAA,EAAAA,UAAS,CAAEE,QAAS,EAAGC,SAAU,KAArE,eACA,GADA,WACoCH,EAAAA,EAAAA,UAAS,KAA7C,eACA,GADA,WACkDA,EAAAA,EAAAA,UAAS,KAA3D,eACA,GADA,WACoCA,EAAAA,EAAAA,UAAS,CAAC,EAAG,OAAjD,eACA,GADA,WACkCA,EAAAA,EAAAA,UAAS,KAA3C,yBAgBA,OAdAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAiBC,MAAK,SAACC,GACrBN,EAAcM,EACf,GACF,GAAE,KAWD,+BAwCE,SAAC,IAAD,CAAab,WAAYA,KAG9B,C","sources":["view/travel/TravelCards.jsx","view/travel/TravelList.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { Row, Col, Card, Button, Typography } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\n\r\nfunction TravelCard({ travelInfo }) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = () => {\r\n    navigate(`/travel/${travelInfo.id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        hoverable\r\n        cover={\r\n          <div style={{ position: \"relative\", width: \"100%\" }}>\r\n            <img\r\n              alt=\"product\"\r\n              src={\"http://127.0.0.1:8000\" + travelInfo.cover_image}\r\n              style={{ width: \"100%\", aspectRatio: \"16/9\", objectFit: \"cover\" }}\r\n            />\r\n            {/* <div\r\n              style={{\r\n                position: \"absolute\",\r\n                top: '0px', \r\n                left: '0px', \r\n                transform: \"rotate(-45deg)\",\r\n                backgroundColor: \"green\",\r\n              }}\r\n            >\r\n              <Text tt type=\"danger\">\r\n                热门\r\n              </Text>\r\n            </div> */}\r\n          </div>\r\n        }\r\n        actions={[\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <div>\r\n              {/* 显示价格的部分 */}\r\n              <p style={{ fontSize: 18, fontWeight: \"bold\" }}>¥ 100.00</p>\r\n            </div>\r\n            <Button type=\"primary\" key=\"order\" onClick={handleClick}>\r\n              详情\r\n            </Button>\r\n          </div>,\r\n        ]}\r\n        // style={{width:\"100%\"}}\r\n      >\r\n        {travelInfo.title}\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function TravelCards({ travelList }) {\r\n  return (\r\n    <>\r\n      <Row gutter={[0, 8]} justify=\"center\" style={{width:\"100%\"}}>\r\n        {/* gutter属性用于设置每个列之间的间隔 */}\r\n        {travelList.map((item) => (\r\n          <Col key={item.id} style={{width:\"100%\"}}>\r\n            <TravelCard travelInfo={item} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Input, DatePicker, Button, Table } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nimport { get_all_travel } from \"../../request/api\";\r\nimport TravelCards from \"./TravelCards\";\r\n\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    render: name => <span>{name}</span>,\r\n  },\r\n  {\r\n    title: 'Destination',\r\n    dataIndex: 'destination',\r\n    render: destination => <span>{destination}</span>,\r\n  },\r\n  {\r\n    title: 'Price',\r\n    dataIndex: 'price',\r\n    render: price => <span>${price.toFixed(2)}</span>,\r\n    sorter: true,\r\n    sortDirections: ['descend', 'ascend'],\r\n  },\r\n  {\r\n    title: 'Start Time',\r\n    dataIndex: 'start_time',\r\n    render: startTime => <span>{new Date(startTime).toLocaleDateString()}</span>,\r\n    sorter: true,\r\n    sortDirections: ['descend', 'ascend'],\r\n  },\r\n];\r\n\r\nexport default function TravelList() {\r\n  const [travelList, setTravelList] = useState([]);\r\n  const [pagination, setPagination] = useState({ current: 1, pageSize: 10 });\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchDestination, setSearchDestination] = useState('');\r\n  const [priceRange, setPriceRange] = useState([0, 100000]);\r\n  const [dateRange, setDateRange] = useState([]);\r\n\r\n  useEffect(() => {\r\n    get_all_travel().then((res) => {\r\n      setTravelList(res);\r\n    });\r\n  }, []);\r\n\r\n\r\n  // const handleTableChange = (pagination, filters, sorter) => {\r\n  //   // setSortBy(sorter.field);\r\n  //   // setSortOrder(sorter.order);\r\n  //   setPagination(pagination);\r\n  // };\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Input.Search\r\n        placeholder=\"Search Name\"\r\n        onSearch={value => setSearchText(value)}\r\n        style={{ width: 200, marginBottom: 16 }}\r\n      />\r\n      <Input.Search\r\n        placeholder=\"Search Destination\"\r\n        onSearch={value => setSearchDestination(value)}\r\n        style={{ width: 200, marginBottom: 16 }}\r\n      />\r\n      <DatePicker.RangePicker\r\n        onChange={dates => setDateRange([dates[0].valueOf(), dates[1].valueOf()])}\r\n        style={{ marginRight: 16 }}\r\n      />\r\n      <Input.Search\r\n        placeholder=\"Min Price\"\r\n        addonBefore=\"$\"\r\n        onChange={e => setPriceRange([e.target.value, priceRange[1]])}\r\n        value={priceRange[0]}\r\n        style={{ width: 100, marginRight: 16 }}\r\n      />\r\n      {/* <Input.Search\r\n        placeholder=\"Max Price\"\r\n        addonBefore=\"$\"\r\n        onChange={  onChange={(e) => setPriceRange[0], e.target.value])}\r\n        value={priceRange[1]}\r\n        style={{ width: 100, marginRight: 16 }}\r\n      /> */}\r\n      {/* <Button type=\"primary\" onClick={null} style={{ marginmarginBottom: 16 }}>\r\n        <SearchOutlined /> Search\r\n      </Button>\r\n      <Table\r\n        columns={columns}\r\n        // dataSource={data}\r\n        // loading={loading}\r\n        pagination={pagination}\r\n        onChange={handleTableChange}\r\n      />  */}\r\n\r\n      <TravelCards travelList={travelList} />\r\n    </>\r\n  );\r\n}\r\n"],"names":["Typography","TravelCard","travelInfo","navigate","useNavigate","hoverable","cover","style","position","width","alt","src","cover_image","aspectRatio","objectFit","actions","display","justifyContent","alignItems","fontSize","fontWeight","type","onClick","id","title","TravelCards","travelList","gutter","justify","map","item","TravelList","useState","setTravelList","current","pageSize","useEffect","get_all_travel","then","res"],"sourceRoot":""}